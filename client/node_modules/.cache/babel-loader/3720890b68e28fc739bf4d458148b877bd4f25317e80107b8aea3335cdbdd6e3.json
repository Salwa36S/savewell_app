{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive - University of Technology and Applied Sciences\\\\Desktop\\\\SaveWell_app\\\\client\\\\src\\\\Components\\\\Location.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Location = () => {\n  _s();\n  const [ip, setIp] = useState(null);\n  const [geoData, setGeoData] = useState(null);\n  const [error, setError] = useState(null);\n  const fetchAddress = async () => {\n    try {\n      const response = await axios.get(\"https://api.ipify.org?format=json\");\n      setIp(response.data.ip);\n    } catch (err) {\n      setError(\"Failed to fetch IP address\");\n    }\n  };\n  const getGeoLocationData = async () => {\n    try {\n      const response = await axios.get(`https://geo.ipify.org/api/v2/country?apiKey=YOUR_NEW_KEY&ipAddress=${ip}`);\n      setGeoData(response.data);\n    } catch (err) {\n      setError(\"Failed to fetch geolocation data\");\n    }\n  };\n  useEffect(() => {\n    fetchAddress();\n  }, []);\n  useEffect(() => {\n    if (ip) {\n      getGeoLocationData();\n    }\n  }, [ip]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Location\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"IP Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }, this), \" \", ip || \"Loading IP address...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), geoData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Country:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }, this), \" \", geoData.location.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Region:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }, this), \" \", geoData.location.region]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Geolocation Data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Location, \"vNBKM8eeScKbSkb0lnI3BjBLy7w=\");\n_c = Location;\nexport default Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Location","_s","ip","setIp","geoData","setGeoData","error","setError","fetchAddress","response","get","data","err","getGeoLocationData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","location","country","region","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive - University of Technology and Applied Sciences/Desktop/SaveWell_app/client/src/Components/Location.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Location = () => {\r\n  const [ip, setIp] = useState(null);\r\n  const [geoData, setGeoData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchAddress = async () => {\r\n    try {\r\n      const response = await axios.get(\"https://api.ipify.org?format=json\");\r\n      setIp(response.data.ip);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch IP address\");\r\n    }\r\n  };\r\n\r\n  const getGeoLocationData = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://geo.ipify.org/api/v2/country?apiKey=YOUR_NEW_KEY&ipAddress=${ip}`\r\n      );\r\n      setGeoData(response.data);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch geolocation data\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAddress();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (ip) {\r\n      getGeoLocationData();\r\n    }\r\n  }, [ip]);\r\n\r\n  if (error) {\r\n    return <p className=\"text-danger\">Error: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Location\">\r\n      <p><strong>IP Address:</strong> {ip || \"Loading IP address...\"}</p>\r\n      {geoData ? (\r\n        <>\r\n          <p><strong>Country:</strong> {geoData.location.country}</p>\r\n          <p><strong>Region:</strong> {geoData.location.region}</p>\r\n        </>\r\n      ) : (\r\n        <p>Loading Geolocation Data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}