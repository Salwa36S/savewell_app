{"ast":null,"code":"import * as yup from 'yup';\nexport const userValidationsSchema = yup.object().shape({\n  name: yup.string().required(\"Name is required..\"),\n  email: yup.string().email(\"Not valid email format\").required(\"Email is required..\"),\n  password: yup.string().min(4, \"Password must be at least 4 characters\").max(20, \"Password must not exceed 20 characters\").required(\"Password is required..\"),\n  confirmpassword: yup.string().required(\"Confirm Password is required.\").test(\"passwords-match\", \"Password does not match.\", function (value) {\n    return this.parent.password === value;\n  })\n});\n\n/*import * as yup from 'yup';\r\nexport const userValidationsSchema=yup.object().shape({\r\n  name:yup.string().required(\"Name is required..\"),\r\n  email:yup.string().email(\"Not valid email format\").required(\"email is requied..\"),\r\n  password:yup.string().min(4).max(20).required(\"password is required..\"),\r\n  confirmpassword:yup.string().oneOf([yup.ref('password'),null],\"Password not match..\").required(),\r\n  age:yup.number().typeError(\"Age must be a number\").min(13, \"You must be at least 13\").required(\"Age is required\"),\r\n  gender:yup.string().oneOf([\"male\", \"female\"]).required(\"Gender is required\")\r\n   \r\n});*/\n\n/*fristname:yup.string().required(\" Frist Name is required..\"),\r\n    lastname:yup.string().required(\" Last Name is required..\"),\r\n    email:yup.string().email(\"Not valid email format\").required(\"email is requied..\"),\r\n    password:yup.string().min(4).max(20).required(\"password is required..\"),\r\n    confirmpassword:yup.string().oneOf([yup.ref('password'),null],\"Password not match..\").required(),*/\n\n/*import * as yup from \"yup\";\r\nexport const userValidationsSchema=yup.object().shape({\r\n  name:yup.string().required(),\r\n  email:yup.string().email(),\r\n  password:yup.string().min(4).max(20).required(),\r\n  confirmpassword:yup.string().oneOf([yup.ref(\"password\"),null],\"password not match\").required(),\r\n  age:yup.number().typeError(\"Age Must be  anmuber\").required(),\r\n  gender:yup.string().oneOf([\"male\",\"female\"]).required()\r\n \r\n});*/\n/*import * as yup from \"yup\";\r\n \r\nexport const userValidationsSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required(\"Name is required\"),\r\n \r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email format\")\r\n    .required(\"Email is required\"),\r\n \r\n  password: yup\r\n    .string()\r\n    .min(4, \"Password must be at least 4 characters\")\r\n    .max(20, \"Password must not exceed 20 characters\")\r\n    .required(\"Password is required\"),\r\n \r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirm password is required\"),\r\n \r\n  age: yup\r\n    .number()\r\n    .typeError(\"Age must be a number\")\r\n    .positive(\"Age must be positive\")\r\n    .integer(\"Age must be an integer\")\r\n    .required(\"Age is required\"),\r\n \r\n  gender: yup\r\n    .string()\r\n    .oneOf([\"male\", \"female\"], \"Gender must be selected\")\r\n    .required(\"Gender is required\")\r\n});\r\n \r\n  */","map":{"version":3,"names":["yup","userValidationsSchema","object","shape","name","string","required","email","password","min","max","confirmpassword","test","value","parent"],"sources":["C:/Users/dell/OneDrive - University of Technology and Applied Sciences/Desktop/SaveWell_app/client/src/Validation/UserValidation.js"],"sourcesContent":["import * as yup from 'yup';\r\n \r\nexport const userValidationsSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required(\"Name is required..\"),\r\n \r\n  email: yup\r\n    .string()\r\n    .email(\"Not valid email format\")\r\n    .required(\"Email is required..\"),\r\n \r\n  password: yup\r\n    .string()\r\n    .min(4, \"Password must be at least 4 characters\")\r\n    .max(20, \"Password must not exceed 20 characters\")\r\n    .required(\"Password is required..\"),\r\n \r\n    confirmpassword: yup\r\n    .string()\r\n    .required(\"Confirm Password is required.\")\r\n    .test(\"passwords-match\", \"Password does not match.\", function (value) {\r\n      return this.parent.password === value;\r\n    }),\r\n \r\n \r\n});\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n/*import * as yup from 'yup';\r\nexport const userValidationsSchema=yup.object().shape({\r\n  name:yup.string().required(\"Name is required..\"),\r\n  email:yup.string().email(\"Not valid email format\").required(\"email is requied..\"),\r\n  password:yup.string().min(4).max(20).required(\"password is required..\"),\r\n  confirmpassword:yup.string().oneOf([yup.ref('password'),null],\"Password not match..\").required(),\r\n  age:yup.number().typeError(\"Age must be a number\").min(13, \"You must be at least 13\").required(\"Age is required\"),\r\n  gender:yup.string().oneOf([\"male\", \"female\"]).required(\"Gender is required\")\r\n   \r\n});*/\r\n \r\n \r\n \r\n/*fristname:yup.string().required(\" Frist Name is required..\"),\r\n    lastname:yup.string().required(\" Last Name is required..\"),\r\n    email:yup.string().email(\"Not valid email format\").required(\"email is requied..\"),\r\n    password:yup.string().min(4).max(20).required(\"password is required..\"),\r\n    confirmpassword:yup.string().oneOf([yup.ref('password'),null],\"Password not match..\").required(),*/\r\n   \r\n \r\n \r\n/*import * as yup from \"yup\";\r\nexport const userValidationsSchema=yup.object().shape({\r\n  name:yup.string().required(),\r\n  email:yup.string().email(),\r\n  password:yup.string().min(4).max(20).required(),\r\n  confirmpassword:yup.string().oneOf([yup.ref(\"password\"),null],\"password not match\").required(),\r\n  age:yup.number().typeError(\"Age Must be  anmuber\").required(),\r\n  gender:yup.string().oneOf([\"male\",\"female\"]).required()\r\n \r\n});*/\r\n/*import * as yup from \"yup\";\r\n \r\nexport const userValidationsSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required(\"Name is required\"),\r\n \r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email format\")\r\n    .required(\"Email is required\"),\r\n \r\n  password: yup\r\n    .string()\r\n    .min(4, \"Password must be at least 4 characters\")\r\n    .max(20, \"Password must not exceed 20 characters\")\r\n    .required(\"Password is required\"),\r\n \r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirm password is required\"),\r\n \r\n  age: yup\r\n    .number()\r\n    .typeError(\"Age must be a number\")\r\n    .positive(\"Age must be positive\")\r\n    .integer(\"Age must be an integer\")\r\n    .required(\"Age is required\"),\r\n \r\n  gender: yup\r\n    .string()\r\n    .oneOf([\"male\", \"female\"], \"Gender must be selected\")\r\n    .required(\"Gender is required\")\r\n});\r\n \r\n  */\r\n "],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,MAAMC,qBAAqB,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACtDC,IAAI,EAAEJ,GAAG,CACNK,MAAM,CAAC,CAAC,CACRC,QAAQ,CAAC,oBAAoB,CAAC;EAEjCC,KAAK,EAAEP,GAAG,CACPK,MAAM,CAAC,CAAC,CACRE,KAAK,CAAC,wBAAwB,CAAC,CAC/BD,QAAQ,CAAC,qBAAqB,CAAC;EAElCE,QAAQ,EAAER,GAAG,CACVK,MAAM,CAAC,CAAC,CACRI,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDC,GAAG,CAAC,EAAE,EAAE,wCAAwC,CAAC,CACjDJ,QAAQ,CAAC,wBAAwB,CAAC;EAEnCK,eAAe,EAAEX,GAAG,CACnBK,MAAM,CAAC,CAAC,CACRC,QAAQ,CAAC,+BAA+B,CAAC,CACzCM,IAAI,CAAC,iBAAiB,EAAE,0BAA0B,EAAE,UAAUC,KAAK,EAAE;IACpE,OAAO,IAAI,CAACC,MAAM,CAACN,QAAQ,KAAKK,KAAK;EACvC,CAAC;AAGL,CAAC,CAAC;;AAqBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}