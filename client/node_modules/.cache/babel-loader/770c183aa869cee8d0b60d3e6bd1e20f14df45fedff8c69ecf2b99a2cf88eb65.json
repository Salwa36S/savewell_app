{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  user: {},\n  isLoading: false,\n  isSuccess: false,\n  isError: false,\n  message: ''\n};\n\n// ✅ Async thunk for registering a user\nexport const registerUser = createAsyncThunk('users/registerUser', async userData => {\n  try {\n    const response = await axios.post(\"http://localhost:3001/registerUser\", {\n      name: userData.name,\n      email: userData.email,\n      password: userData.password,\n      age: userData.age,\n      gender: userData.gender\n    });\n    return response.data.user;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const login = createAsyncThunk('users/login', async credentials => {\n  try {\n    const res = await axios.post(\"http://localhost:3001/login\", {\n      email: credentials.email,\n      password: credentials.password\n    });\n    return res.data.user;\n  } catch (error) {\n    const errorMessage = \"Invaild creadintls\";\n    alert(errorMessage);\n    throw new Error(errorMessage);\n  }\n});\n\n// ✅ Slice\nconst userSlice = createSlice({\n  name: \"users\",\n  //name of the state\n  initialState,\n  // initial value of the state\n  reducers: {\n    addUser: (state, action) => {\n      state.value.push(action.payload);\n    },\n    deleteUser: (state, action) => {\n      state.value = state.value.filter(user => user.email !== action.payload);\n    },\n    updateUser: (state, action) => {\n      state.value.map(user => {\n        if (user.email === action.payload.email) {\n          user.name = action.payload.name;\n          user.password = action.payload.password;\n        }\n      });\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  addUser,\n  de\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","user","isLoading","isSuccess","isError","message","registerUser","userData","response","post","name","email","password","age","gender","data","error","console","log","login","credentials","res","errorMessage","alert","Error","userSlice","reducers","addUser","state","action","value","push","payload","deleteUser","filter","updateUser","map","extraReducers","builder","addCase","pending","fulfilled","rejected","de","actions","reducer"],"sources":["C:/Users/dell/OneDrive - University of Technology and Applied Sciences/Desktop/SaveWell_app/client/src/Features/UserSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst initialState = {\n  user: {},\n  isLoading: false,\n  isSuccess: false,\n  isError: false,\n  message: '',\n};\n\n// ✅ Async thunk for registering a user\nexport const registerUser = createAsyncThunk(\n  'users/registerUser',\n  async (userData) => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/registerUser\", {\n        name: userData.name,\n      email: userData.email,\n      password:userData.password,\n      age: userData.age,\n      gender: userData.gender\n      });\n      return response.data.user;\n    } catch (error) {\n      console.log(error)\n    }\n  }\n);\n\nexport const login = createAsyncThunk(\n  'users/login',\n  async (credentials) => {\n    try {\n      const res = await axios.post(\"http://localhost:3001/login\", {\n        email:credentials.email,\n        password:credentials.password,\n      });\n      return res.data.user;\n    } catch (error) {\n      const errorMessage=\"Invaild creadintls\";\n      alert(errorMessage);\n      throw new Error(errorMessage);\n    }\n  }\n);\n\n\n\n\n// ✅ Slice\nconst userSlice = createSlice({\n  name: \"users\", //name of the state\n  initialState, // initial value of the state\n  reducers: {\n    addUser:(state,action)=>{\n      state.value.push(action.payload);\n    },\n    deleteUser:(state,action)=>{\n      state.value=state.value.filter((user)=>user.email !== action.payload);\n    },\n    updateUser:(state,action)=>{\n      state.value.map((user)=>{\n        if(user.email === action.payload.email){\n          user.name=action.payload.name;\n          user.password=action.payload.password;\n        }\n      });\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(registerUser.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(registerUser.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.user = action.payload;\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n        state.user = null;\n      })\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.user = action.payload;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n        state.user = null;\n      });\n  },\n});\n\nexport const { addUser,de } = userSlice.actions;\nexport default userSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}