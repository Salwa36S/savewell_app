{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { UserData } from \"../ExampleData\";\n// Initialize the initial state\nconst initialState = {\n  value: UserData,\n  user: {},\n  isLoading: false,\n  isSuccess: false,\n  isError: false,\n  errorMessage: \"\"\n};\n\n// Thunk for registering a user\nexport const registerUser = createAsyncThunk(\"users/registerUser\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(\"http://localhost:3001/registerUser\", {\n      name: userData.name,\n      email: userData.email,\n      password: userData.password\n    });\n    return response.data.user; // Return user data directly\n  } catch (error) {\n    var _error$response, _error$response$data;\n    // Reject and pass error message to the reducer\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n  }\n});\nexport const login = createAsyncThunk(\"users/login\", async userData => {\n  try {\n    const response = await axios.post(\"http://localhost:3001/login\", {\n      email: userData.email,\n      password: userData.password\n    });\n    const user = response.data.user;\n    console.log(response);\n    return user;\n  } catch (error) {\n    //handle the error\n    const errorMessage = \"Invalid credentials\";\n    alert(errorMessage);\n    throw new Error(errorMessage);\n  }\n});\nexport const logout = createAsyncThunk(\"/users/logout\", async () => {\n  try {\n    // Send a request to your server to log the user out\n    const response = await axios.post(\"http://localhost:3001/logout\");\n  } catch (error) {}\n});\nexport const updateUserProfile = createAsyncThunk(\"user/updateUserProfile\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.put(`http://localhost:3001/updateUserProfile/${userData.email}`, userData, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data.user;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Profile update failed\");\n  }\n});\n// Define the slice\nexport const userSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    //Asynchronous actions that update the state directly,\n    builder.addCase(registerUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.isLoading = true;\n    }).addCase(registerUser.rejected, state => {\n      state.isLoading = false;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.isLoading = false;\n      state.isSuccess = true;\n    }).addCase(login.rejected, state => {\n      state.isLoading = false;\n      state.isError = true;\n    }).addCase(logout.pending, state => {\n      state.isLoading = true;\n    }).addCase(logout.fulfilled, state => {\n      // Clear user data or perform additional cleanup if needed\n      state.user = {};\n      state.isLoading = false;\n      state.isSuccess = false;\n    }).addCase(logout.rejected, state => {\n      state.isLoading = false;\n      state.isError = true;\n    }).addCase(updateUserProfile.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateUserProfile.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload;\n    }).addCase(updateUserProfile.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.errorMessage = action.payload;\n    });\n  }\n});\n/*export const { addUser,deleteUser,updateUser } = userSlice.actions;*/\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","UserData","initialState","value","user","isLoading","isSuccess","isError","errorMessage","registerUser","userData","rejectWithValue","response","post","name","email","password","data","error","_error$response","_error$response$data","message","login","console","log","alert","Error","logout","updateUserProfile","put","headers","_error$response2","_error$response2$data","userSlice","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","rejected","payload","reducer"],"sources":["C:/Users/dell/OneDrive - University of Technology and Applied Sciences/Desktop/SaveWell_app/client/src/Features/UserSlice.js"],"sourcesContent":[" \nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { UserData } from \"../ExampleData\";\n// Initialize the initial state\nconst initialState = {\n  value: UserData,\n  user: {},\n  isLoading: false,\n  isSuccess: false,\n  isError: false,\n  errorMessage: \"\",\n};\n \n// Thunk for registering a user\nexport const registerUser = createAsyncThunk(\"users/registerUser\",\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/registerUser\", {\n        name:userData.name,\n        email:userData.email,\n        password:userData.password,\n      });\n      return response.data.user; // Return user data directly\n    } catch (error) {\n      // Reject and pass error message to the reducer\n      return rejectWithValue(error.response?.data?.message || error.message);\n    }\n  }\n);\nexport const login = createAsyncThunk(\"users/login\", async (userData) => {\n  try {\n    const response = await axios.post(\"http://localhost:3001/login\", {\n      email: userData.email,\n      password: userData.password,\n    });\n \n    const user = response.data.user;\n    console.log(response);\n    return user;\n  } catch (error) {\n    //handle the error\n    const errorMessage = \"Invalid credentials\";\n    alert(errorMessage);\n    throw new Error(errorMessage);\n  }\n},\n \n \n);\nexport const logout = createAsyncThunk(\"/users/logout\", async () => {\n  try {\n    // Send a request to your server to log the user out\n    const response = await axios.post(\"http://localhost:3001/logout\");\n  } catch (error) { }\n});\n \n \n \nexport const updateUserProfile = createAsyncThunk(\n  \"user/updateUserProfile\",\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await axios.put(\n        `http://localhost:3001/updateUserProfile/${userData.email}`,\n        userData,\n        { headers: { \"Content-Type\": \"application/json\" } }\n      );\n      return response.data.user;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || \"Profile update failed\");\n    }\n  }\n);\n// Define the slice\nexport const userSlice = createSlice({\n \n  name: \"users\",\n  initialState,\n  reducers: {\n \n  },\n  extraReducers: (builder) => {\n    //Asynchronous actions that update the state directly,\n    builder\n        .addCase(registerUser.pending, (state) => {\n            state.isLoading = true;\n        })\n        .addCase(registerUser.fulfilled, (state, action) => {\n            state.isLoading = true;\n        })\n        .addCase(registerUser.rejected, (state) => {\n            state.isLoading = false;\n        })\n \n   \n \n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.isLoading = false;\n        state.isSuccess = true;\n       \n      })\n      .addCase(login.rejected, (state) => {\n        state.isLoading = false;\n        state.isError = true;\n       \n      })\n      .addCase(logout.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(logout.fulfilled, (state) => {\n        // Clear user data or perform additional cleanup if needed\n        state.user = {};\n        state.isLoading = false;\n        state.isSuccess = false;\n      })\n      .addCase(logout.rejected, (state) => {\n        state.isLoading = false;\n        state.isError = true;\n      })\n      .addCase(updateUserProfile.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(updateUserProfile.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.user = action.payload;\n      })\n      .addCase(updateUserProfile.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.errorMessage = action.payload;\n      });\n  },\n});\n/*export const { addUser,deleteUser,updateUser } = userSlice.actions;*/\nexport default userSlice.reducer;\n \n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}